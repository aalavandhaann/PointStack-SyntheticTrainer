Restoring modules from user's tensorenvironment
Traceback (most recent call last):
  File "/home/ashok82/Workspace/TensorFlowEnvironment/projects/PointStack-SyntheticTrainer/train.py", line 13, in <module>
    from core.builders import build_dataset, build_network, build_optimizer
  File "/home/ashok82/Workspace/TensorFlowEnvironment/projects/PointStack-SyntheticTrainer/core/builders.py", line 4, in <module>
    from . import datasets
  File "/home/ashok82/Workspace/TensorFlowEnvironment/projects/PointStack-SyntheticTrainer/core/datasets/__init__.py", line 1, in <module>
    from .modelnet40 import ModelNet40
  File "/home/ashok82/Workspace/TensorFlowEnvironment/projects/PointStack-SyntheticTrainer/core/datasets/modelnet40.py", line 14, in <module>
    from .dataset_template import DatasetTemplate
  File "/home/ashok82/Workspace/TensorFlowEnvironment/projects/PointStack-SyntheticTrainer/core/datasets/dataset_template.py", line 15, in <module>
    from utils.vis_utils import visualize_numpy
  File "/home/ashok82/Workspace/TensorFlowEnvironment/projects/PointStack-SyntheticTrainer/utils/vis_utils.py", line 2, in <module>
    import open3d as o3d
  File "/home/ashok82/Workspace/TensorFlowEnvironment/lib/python3.10/site-packages/open3d/__init__.py", line 9, in <module>
    from open3d.linux import *
  File "/home/ashok82/Workspace/TensorFlowEnvironment/lib/python3.10/site-packages/open3d/linux/__init__.py", line 7, in <module>
    globals().update(importlib.import_module('open3d.linux.open3d').__dict__)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.10.2/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
ImportError: /home/ashok82/Workspace/TensorFlowEnvironment/lib/python3.10/site-packages/open3d/linux/open3d.so: undefined symbol: _Py_ZeroStruct
2023-02-13 19:25:53.283240: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
